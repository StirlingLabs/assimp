name: C/C++ Sanitizer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  job:
    name: Sanitize ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # For Windows msvc, for Linux and macOS let's use the clang compiler.
        include:
          - name: Address
            arg: ASAN=ON
          - name: Undefined Behaviour
            arg: UBSAN=ON

    env:
      workingDir: build

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt install ninja-build libboost-all-dev libzzip-dev libminizip-dev

      - name: Configure & Build
        env:
          CC: clang
          CXX: clang++
          arg: ${{ matrix.arg }}
        run: |
          mkdir $workingDir && cd $workingDir
          cmake .. -GNinja -DCMAKE_BUILD_TYPE=Debug -DBUILD_SHARED_LIBS=ON -DASSIMP_${arg}
          cmake --build . -- -j 24 -v

      - name: Test
        run: |
          cd $workingDir/bin
          ./unit
